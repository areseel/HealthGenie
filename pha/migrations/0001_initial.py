# Generated by Django 3.2.18 on 2023-05-17 05:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pha.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(choices=[('male', '남성'), ('female', '여성')], max_length=6)),
                ('age', models.PositiveIntegerField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', pha.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('f_name', models.CharField(max_length=100)),
                ('calories', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('carbs', models.FloatField()),
                ('ref_serving_size', models.FloatField()),
                ('cuisine', models.CharField(max_length=100)),
                ('ingredients', models.CharField(max_length=255)),
                ('allergen', models.CharField(max_length=100)),
                ('dietary_restriction', models.CharField(max_length=100)),
                ('flavor_profile', models.CharField(max_length=100)),
                ('food_category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_achieved', models.BooleanField(default=False)),
                ('p_name', models.CharField(max_length=100)),
                ('cur_weight', models.FloatField()),
                ('goal_weight', models.FloatField()),
                ('goal_bmi', models.PositiveIntegerField()),
                ('goal_type', models.CharField(max_length=100)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthInfo',
            fields=[
                ('health_info', models.AutoField(primary_key=True, serialize=False)),
                ('allergy_name', models.CharField(max_length=100)),
                ('activity_level', models.CharField(max_length=100)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('dietary_restriction', models.CharField(max_length=100)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pha.project')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('track_id', models.AutoField(primary_key=True, serialize=False)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('cur_weight', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('update_time', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('meals_id', models.AutoField(primary_key=True, serialize=False)),
                ('meal_time', models.DateTimeField()),
                ('serving_size', models.FloatField()),
                ('rating', models.PositiveIntegerField()),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pha.food')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('meals_id', 'food_id', 'user_id', 'meal_time')},
            },
        ),
    ]
